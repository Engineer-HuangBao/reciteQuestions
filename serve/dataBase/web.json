{"title":"备注注解","name":"Web","key":"web","data":[{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":" ★★★★ url从输入到渲染页面的全过程","key":"web1","answer":"- 浏览器构建HTTP Request请求， DNS解析URL地址、生成HTTP请求报文、构建TCP连接、使用IP协议选择传输路线\n- 将请求通过网络传输到服务端 从客户机到服务器需要通过许多网络设备，一般包括集线器、交换器、路由器等\n- 服务器构建HTTP Response响应，响应客户端的请求\n- 将响应体的数据通过网络传输返回给客户端\n- 浏览器渲染页面 解析HTML、CSS、JS，生成RenderTree渲染页面\n"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★★★ tcp三次握手，四次挥手，可靠传输原理","key":"web2","answer":"- 三次握手\n · 第一次握手：客户端发送syn报文，并发送seq为x序列号给服务端，等待服务端的确认。\n · 第二次握手：服务端发送syn+ack报文，并发送seq为Y的序列号，在确认序列号为x+1\n · 第三次握手：客户端发送ack报文，并发送seq序列号为z，在确认序列号为y+1\n- 四次挥手\n · 第一次挥手：先由客户端向服务器端发送一个FIN，请求关闭数据传输。\n · 第二次挥手：当服务器接收到客户端的FIN时，向客户端发送一个ACK，其中ack的值等于FIN+SEQ\n · 第三次挥手：然后服务器向客户端发送一个FIN，告诉客户端应用程序关闭。\n · 第四次挥手：当客户端收到服务器端的FIN是，回复一个ACK给服务器端。其中ack的值等于FIN+SEQ\n\n"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":" ★★★ `http200` 和 `302` 的区别","key":"web3","answer":"- http_200的意思是 成功处理了请求\n- http_302的意思是（临时移动）服务器目前从不同位置的网页响应请求， 但请求者应继续使用原有位置来进行以后的请求"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★★ 为什么浏览器要限制TCP的最大个数","key":"web4","answer":"- 建立一个tcp连接需要：1，socket文件描述符；2，IP地址；3，端口；4，内存\n- 1、内存资源： 一个tcp连接最小占用内存为4096+4096 = 8k， 那么对于一个8G内存的机器，在不考虑其他限制下， 最多支持的并发量为：810241024/8 约等于100万， 在实际中，由于linux kernel对一些资源的限制， 加上程序的业务处理，所以，8G内存是很难达到100万连接的\n- 2、CPU资源"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★★ HTTP2.0的特点","key":"web5","answer":"HTTP2.0大幅度的提高了web性能，在HTTP1.1完全语意兼容的基础上，进一步减少了网络的延迟。\n1、二进制分帧\n2、多路复用\n3、首部压缩\n4、流量控制\n5、请求优先级\n6、服务器推送"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":" ★★★ 说一下HTTP2 多路复用原理，以及多路复用优势？","key":"web6","answer":"- 第一个：串行的文件传输。当请求a文件时，b文件只能等待，等待a连接到服务器、 服务器处理文件、服务器返回文件，这三个步骤。我们假设这三步用时都是1秒， 那么a文件用时为3秒，b文件传输完成用时为6秒，依此类推。 （注：此项计算有一个前提条件，就是浏览器和服务器是单通道传输） \n- 第二个：连接数过多。我们假设Apache设置了最大并发数为300，因为浏览器限制， 浏览器发起的最大请求数为6，也就是服务器能承载的最高并发为50， 当第51个人访问时，就需要等待前面某个请求处理完成。"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★★ 简述https原理，以及与http的区别","key":"web7","answer":"- HTTP协议工作在80端口，HTTPS协议工作在443端口\n- HTTPS需要申请证书（用于验证服务器身份）\n- HTTP在TCP三次握手建立连接之后即可开始传输数据；HTTPS协议则需要在建立TCP连接之后客户端与服务器在进行SSL加密，确定对话密钥，完成加密后才开始传输数据。\n- HTTPS协议传输是密文，HTTP协议传输是明文\n"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":" ★★★ CDN 是什么？描述下 CDN 原理？为什么要用 CDN?","key":"web8","answer":"CDN的全称是Content Delivery Network，即内容分发网络 共有云厂商在全世界各地都遍布不计其数都数据中心和服务器， CDN服务简单来讲就是这些厂商将你的服务器上面的文档分发到他们不同地区的服务器的当中， 每个地区可以称为一个节点，这样用户在访问你的网址时， 浏览器发送的请求就会优先绕去离客户最近的节点来获取数据， 这样方便客户更快的速度访问网站。 CDN是构建在现有网络基础之上的智能虚拟网络，依靠部署在各地的边缘服务器， 通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容， 降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":" ★★★ DNS 查询的过程，分为哪两种，是怎么一个过程","key":"web9","answer":"- 1、分布域名解析 是指分在客户端上维护一个静态的文本文件，其中包含主机名和IP地址的映射。 随着网络规模的扩大，分布式分辨率的有效性越来越低。\n- 2、集中式域名解析 要求网络中有多台DNS服务器，负责维护域名/IP地址映射数据库。 客户端从指定的服务器获取域名的地址信息。一旦客户端指定的DNS服务器不包含相应的数据， DNS服务器就会在网络中进行递归查询，并获取其他服务器上的地址信息。"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"为什么from表单提交没有跨域问题，但ajax有跨域问题","key":"web10","answer":"浏览器的策略本质是：一个域名下面的JS，没有经过允许是不能读取另一个域名的内容，但是浏览器不阻止你向另外一个域名发送请求。 所以form表单提交没有跨域问题，提交form表单到另外一个域名，原来页面是无法获取新页面的内容，或者说form提交后不需要返回，但是ajax是需要返回的。 而ajax是想要读取响应内容，浏览器是不允许你这么做的。 浏览器的安全策略限制的是js脚本，并不限制src，form表单提交之类的请求， 就是说form表单提交不存在安全问题，ajax提交跨域存在安全问题。"}],"isChoice":false}