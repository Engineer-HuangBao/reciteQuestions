{"title":"备注注解","name":"Html+css3","key":"html+css3","data":[{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★ 父元素和子元素宽高不固定，如何实现水平垂直居中","key":"html+css31","answer":"- 弹性盒模型\n  -父元素设置：display:flex; justify-content:center; align-items:center\n  -额外的骚操作：父元素设置弹性盒display:flex; 子元素可以设置margin: auto; 实现垂直水平居中\n- 定位属性（position）配合位移属性（transform）\n  - 父元素设置：position:relative，\n  - 子元素设置：position:absolute; top:50%; left:50%; transform:translate(-50%，-50%)"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ 分别实现骰子中的'一点' 和 '三点' 的布局。","key":"html+css32","answer":"*一点布局：原理就是将单个子元素垂直水平居中，利用弹性盒模型(display:flex)即可*/\n父元素设置：display:flex; justify-content:center; align-items: center\n\n/*三点布局：同样是使用弹性盒模型(display:flex)，只不过这次需要用到其他属性*/\n\n父元素设置：display: flex; justify-content: space-between;\n子元素设置： .child:nth-child(2){\n              align-self: center;\n            }\n            .child:nth-child(3){\n              align-self: flex-end;\n            }\n\n三点布局需要三个子元素，在这里的第一个子元素不需要设置排列方式，默认为 align-self: flex-start \njustify-content: space-between; 的作用是使子元素能够在水平方向上两边产生间隔并平均分布空间\nalign-self: flex-start(默认)/center/flex-end; 该属性作用在父元素设置了display:flex的子元素上，可以调整子元素自身的位置"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ 简述选择器~和+的区别。","key":"html+css33","answer":"~ 选择器的作用：\n    1.选择紧跟着当前符合条件元素后面的同级元素\n    2.可以匹配多个\n+ 选择器的作用：\n    1.选择紧跟在当前符合条件元素后面的同级元素\n    2.只能匹配一个\n\n例： <div class=\"box\"></div>\n    <p class=\"one\"></p>\n    <span class=\"two\"></span>\n    <p class=\"three\"></p>\n    <span class=\"four\"></span>\n\n    .box ~ p  ：可以选中box下的所有p元素，既是 one 和 three\n    .box + span ：则匹配选中box相邻下符合条件的第一个元素，既是 two"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ 简述box-sizing的有效值以及所对应的盒模型规则。","key":"html+css34","answer":"/*box-sizing值*/\n    box-sizing: content-box/border-box/inherit\n box-sizing属性用于更改用于计算元素的宽度和高度默认的CSS盒子模型，可以使用此属性来模拟不正确支持CSS盒子模型规范的游览器行为。\n**content-box：\n    1.box-sizing的默认属性\n    2.是CSS2.1中规定的宽度高度的显示行为\n    3.在CSS中定义的宽度和高度就对应到元素的内容框（即元素容器本身\n    4.在CSS中定义的宽度和高度之外绘制元素的内边距和边框（即在元素容器本身上增加内边距和边框，容器宽高需要自增计算\n    容器占据空间大小计算方式：content（容器宽高）+ margin（外边距） + border（边框）\n**border-box:\n    1.在CSS中微元素设定的宽度和高度就决定了元素的边框值\n    2.元素在设置内边距和边框是在已经设定好的宽度和高度之内进行绘制\n    3.CSS中设定的宽度和高度减去边框和内间距才能得到元素内容所占的实际宽度和高度\n    容器占据空间大小计算方式：content（容器宽高）+padding（内边距）+border（边框）\n**inherit：\n    1.规定元素是从父容器继承box-sizing的属性值"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★★ html中元素的margin是否会叠加（合并）？如何解决？","key":"html+css35","answer":"/*  会叠加   */\n问题详解1： flex布局对子元素的影响\n    1.子元素的float、clear和vertical-align属性将会失效\n    2.解决了margin传递、重叠（叠加）问题\n\n问题详解2：flex布局的margin传递叠加问题主要有以下两种\n    1.父子间的margin，会由子级传递到父级\n    —— 解决方法： margin传递的产生的原因是父级的高度没有被自动撑开，所以在父级父级增加属性：overflow: auto 即可解决\n    2.兄弟间的margin值会重复叠加\n    —— 解决方法： 浏览器为了保证列表的整齐，上下margin产生了叠加，不能直接解决。只能通过减少一个margin的方式。如只定义margin-top:100px;  margin-bottom:0px。的方式解决。"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ 简述align-items和align-content的区别。","key":"html+css36","answer":"align-items：可以应用于所有的flex容器，它的作用是设置flex子项在每个flex行的交叉轴上的默认对齐方式（相对Y轴\n\nalign-content：只适用于多行的flex容器，在使用前需在flex容器设置flex-wrap：wrap;表示子元素超出换行；align-content 它的作用是当flex容器在交叉轴上有多余的空间时，将子项作为一个整体进行对齐。"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ 简述data-*属性的用法（如何设置，如何获取），有何优势？","key":"html+css37","answer":"data-*定义：\n    1.是用于储存页面或应用程序的私有自定义数据\n    2.赋予我们在所有html元素上嵌入自定义data属性的能力\n\ndata-*用法：\n    1.属性名不应该包含任何大写字母，并且在前缀 \"data-\" 之后必须有至少一个字符\n    2.属性值可以是任意字符串\n    3.一个元素可以拥有任意数量的data属性\n    4.data属性无法储存对象，如需储存，可通过对象序列化\n\ndata-*如何设置、获取：\n    1.如何设置\n        通过JavaScript内置的setAttribute('data属性名','新内容')即可设置\n        通过该数据类型的(dataset) API设置data值，IE10以上才支持；\n            var button = document.queryselector('button')\n            button.dataset.data属性名 = '新内容' ; 这里的data属性名是指data-后面的名字\n\n    2.如何获取\n        通过JavaScript内置的getAttribute('data属性名') 即可获取\n        通过该数据类型的(dataset) API设置data值，IE10以上才支持；\n            var button = document.queryselector('button')\n            data = button.dataset.data属性名 ; 这里的data属性名是指data-后面的名字\n\ndata-*优势：\n    1.其储存的自定义数据能够被页面的JavaScript利用，可以创建更好的用户体验\n    2.可以通过JavaScript来构造数据、填充数据\n    3.代码体积小、较为灵活\n    4.解决网站的外观和实用性之间产生的冲突"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★ 简述title与h1的区别，b与strong的区别，i与em的区别。","key":"html+css38","answer":"《title与h1的区别》：\n    1. 从网站角度看，title 更重于网站信息。title可以直接告诉搜索引擎和用户这个网站是关于什么主题和内容的。\n    2. 从文章角度看，h1则是用于概括文章主题。\n    3. 一个网站可以有多个title,最好一个单页用一个title，以便突出网站页面主体信息，从seo看，title权重比h1高，适用性比h1广。\n    4. 标记了h1的文字页面给予的权重会比页面内其他权重高很多。一个好的网站是h1和title并存，既突出h1文章主题，又突出网站主题和关键字。达到双重优化网站的效果。\n\n《b与strong 的区别》：\n    1. b 是只是对文本的简单加粗， strong 是一个语义化标签，对相关文本具有强调作用\n    2. b 标签只是侧重于字体加粗， strong标签加强字体的语气都是通过粗体来实现的，相比之下，搜索引擎更喜欢侧重于strong标签\n    3. strong标签更注重于内容上的应用，在html中，对关键词的标明，然而还有一些网站上，也有使用strong标签登对小标题进行强调，但是在页面中，如果出现过多的strong标签，可能会对排名不利。\n\n《i 与 em 的区别》：\n    1. i(italic)是实体标签，用来使字符倾斜，em(emphasis)是逻辑标签，作用是强调文本内容 \n    2. i标签只是斜体的样式，没有实际含义，常用来表达无强调或着重意味的斜体，比如生物学名、术语、外来语；\n    3. em表示标签内字符重要，用以强调，其默认格式是斜体，但是可以通过CSS添加样式。\n    建议：为了符合CSS3的规范，i 标签应尽量少用而应改用 em"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★ 什么是标准文档流","key":"html+css39","answer":"*** 标准文档流指的是元素排版布局过程中，元素会默认自动从左往右，从上往下的流式排列方式。当前面内容发生了变化，后面的内容位置也会随着发生变化。\n\n*** HTML就是一种标准文档流文件。\n\n简单的来说就是各种布局属性在html中所显示的效果，如display（行内元素与块级元素*非常重要*）、float、position"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":" ★ z-index是什么？在position的值什么时候可以触发?","key":"html+css310","answer":"z-index : 指的是一个元素在当前文档页面定位时重叠层显示的层级等级，默认为0 ，数值不限，越大显示层级越高\n\n触发机制：当position的值设置为absolute、relative和fixed时才能触发"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ CSS3 如何实现圆角？","key":"html+css311","answer":"border-radius属性\n    1. 四个值: 第一个值为左上角，第二个值为右上角，第三个值为右下角，第四个值为左下角。\n    2. 三个值: 第一个值为左上角, 第二个值为右上角和左下角，第三个值为右下角\n    3. 两个值: 第一个值为左上角与右下角，第二个值为右上角与左下角\n    4. 一个值： 四个圆角值相同\n只需要使用border-radius将四个角设置为相适应的尺寸即可实现圆角"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ HTML5有哪些缓存方式？","key":"html+css312","answer":"1、localstorege缓存，将数据储存在本地客户端，只有用户手动清除才能清除缓存\n    API：1.localstorege.setItem(key,value)，键值对的形式缓存\n        2.localstorege.getItem(key)，根据键名来缓存值\n        3.localstorege.length ，获取总缓存数量\n\n2、sessionStorege 会话缓存，会话机制是指从打开浏览器开始访问页面的时候，到关闭这个页面的过程成为一个会话，sessionStorege储存的数据会随着页面关闭而销毁\n    API: 1. sessionStorage.setItem(key,val)，localStorage是以键值对的形式创建的；\n         2. sessionStorage.getItem(key)，根据键名来获取缓存的值；\n         3. sessionStorage.length；获取总共缓存值得数量， localStoarge返回的是个对象；\n\n3、离线缓存机制(Application Cache)\n    1. 配置manifest文件，manifest 文件是简单的文本文件，它告知浏览器被缓存的内容（以及不缓存的内容）\n    2. manifest 文件可分为三个部分：\n        1、CACHE MANIFEST - 在此标题下列出的文件将在首次下载后进行缓存\n        2、NETWORK - 在此标题下列出的文件需要与服务器的连接，且不会被缓存\n        3、FALLBACK - 在此标题下列出的文件规定当页面无法访问时的回退页面（比如 404 页面）\n    3. API： 0（UNCACHED） : 无缓存， 即没有与页面相关的应用缓存\n            1（IDLE） : 闲置，即应用缓存未得到更新\n            2 （CHECKING） : 检查中，即正在下载描述文件并检查更新\n            3 （DOWNLOADING） : 下载中，即应用缓存正在下载描述文件中指定的资源\n            4 （UPDATEREADY） : 更新完成，所有资源都已下载完毕\n            5 （IDLE） : 废弃，即应用缓存的描述文件已经不存在了，因此页面无法再访问应用缓存\n4、web SQL\n    1. 关系数据库，通过SQL语句访问\n    2. Web SQL 数据库API并不是HTML5 规范的一部分，但是它是一个独立的规范，引入了一组使用SQL操作客户端数据库的APIs\n    3. 支持情况：Web SQL 数据库可以在最新版的 Safari, Chrome 和 Opera 浏览器中工作。\n    4. API：1. openDatabase：这个方法使用现有的数据库或者新建的数据库创建一个数据库对象。\n            2. transaction：这个方法让我们能够控制一个事务，以及基于这种情况执行提交或者回滚。\n            3. executeSql：这个方法用于执行实际的 SQL 查询。\n\n5、 IndexDB\n    1.索引数据库 (IndexedDB) API（作为 HTML5 的一部分）对创建具有丰富本地存储数据的数据密集型的离线 HTML5 Web 应用程序很有用。同时它还有助于本地缓存数据，使传统在线 Web 应用程序（比如移动 Web 应用程序）能够更快地运行和响应。"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ CSS3新增伪类有那些？","key":"html+css313","answer":"常用的伪类：\n    1. :link 选择所有未访问的链接\n    2. :visited 选择所有访问过的链接\n    3. :active 选择正在活动的链接（或理解为鼠标点击瞬间效果）\n    4. :hover 鼠标放到链接后的状态\n    5. :focus 选择元素输入后具有焦点\n    6. :before 在元素之前插入内容\n    7. :after 在元素之后插入内容"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★ 简述一下src与href的区别，title和alt的区别","key":"html+css314","answer":"href：href表示超文本引用，用来建立当前元素和文档之间的链接，常用在link和a等元素上。\n    注：当浏览器解析到这一句时会识别该文档为css文件，会下载并不会停止对当前文档的处理，所以建议使用link方式而不是@import加载css。\n\nsrc：src表示引用资源，替换当前元素，是页面内容不可缺少的一部分，常用在img，script，iframe上。src指向外部资源的位置，指向的内部会迁入到文档中当前标签所在的位置；请求src资源时会将其指向的资源下载并应用到当前文档中,例如js脚本、img图片等。src链接内的地址不会有跨域问题\n     注：当浏览器解析到这一句时会暂停其他资源的下载和处理，直至将该资源加载、编译、执行完毕。这也是js脚本放在底部而不是头部的问题\n\ntitle：\n    1. title属性是为元素提供额外的注释信息，当鼠标放在元素上时会有title文字显示，以达到补充说明或提示。\n       2. title属性更倾向于用户体验的考虑。\n    3. title既可以是元素的属性也可以是标签，作为属性可以用在除base,basefont,head,html,meta,param,script和title之外的任何标签上（title常与form以及a标签一同使用，以提供关于输入格式和链接目标的信息），title与style、id、class等一起作为HTML中许多标签共用的标准属性。\n\nalt：\n    1. alt属性是在你的图片无法显示时的替代文本，它会直接输出在原本加载图片的地方。\n    2. alt属性有利于SEO，是搜索引擎搜录时判断图片与文字是否相关的重要依据。\n    3. alt只能是元素的属性，只能用在img、area和input标签中（img,area中alt必须指定）。     \n\n注：当a标签内嵌套img标签时，起作用的是img的title属性。"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":" ★ 什么是CSS hack？","key":"html+css315","answer":"CSS hack：CSS hack是通过在CSS样式中加入一些特殊的符号，让不同的浏览器识别不同的符号（什么样的浏览器识别什么样的符号是有标准的，CSS hack就是让你记住这个标准），以达到应用不同的CSS样式的目的。\n\n注：CSS属性Hack、CSS选择符Hack以及IE条件注释Hack， Hack主要针对IE浏览器。\n\n例：margin属性在ie6中显示的距离会比其他浏览器中显示的距离宽2倍，也就是说margin-left:20px;在ie6中距左侧对象的实际显示距离是40px，而在非ie6中显示的距左侧对象的距离是设置的值20px;所以要想设置一个对象距离左侧对象的距离在所有浏览器中都显示是20px的宽度的样式应为：.kwstu{margin-left:20px;_margin-left:20px;}\n\nCSS hack常见的三种形式：\n    1. 属性级Hack：比如IE6能识别下划线“_”和星号“*”，IE7能识别星号“*”，但不能识别下划线”_ ”，而firefox两个都不能认识。\n    2. 选择符级Hack：比如IE6能识别*html .class{}，IE7能识别*+html .class{}或者*:first-child+html .class{}。\n    3. IE条件注释Hack：IE条件注释是微软IE5开始就提供的一种非标准逻辑语句。比如针对所有IE：&lt;!-[if IE]&gt;&lt;!-您的代码-&gt;&lt;![endif]&gt;，针对IE6及以下版本：&lt;!-[if it IE 7]&gt;&lt;!-您的代码-&gt;&lt;![endif]-&gt;，这类Hack不仅对CSS生效，对写在判断语句里面的所有代码都会生效。\n    PS：条件注释只有在IE浏览器下才能执行，这个代码在非IE浏览下被当做注释视而不见。可以通过IE条件注释载入不同的CSS、JS、HTML和服务器代码等。"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ 什么叫做优雅降级和渐进增强？","key":"html+css316","answer":"渐进增强 progressive enhancement： \n    1. 针对低版本浏览器进行构建页面，保证最基本的功能，然后再针对高级浏览器进行效果、交互等改进和追加功能达到更好的用户体验。\n    2. 渐进增强观点则认为应关注于内容本身。内容是我们建立网站的诱因。有的网站展示它，有的则收集它，有的寻求，有的操作，还有的网站甚至会包含以上的种种，但相同点是它们全都涉及到内容。这使得“渐进增强”成为一种更为合理的设计范例。这也是它立即被 Yahoo! 所采纳并用以构建其“分级式浏览器支持 (Graded Browser Support)”策略的原因所在。\n\n优雅降级 graceful degradation：\n    1. 一开始就构建完整的功能，然后再针对低版本浏览器进行兼容。\n    2. 优雅降级观点认为应该针对那些最高级、最完善的浏览器来设计网站。而将那些被认为“过时”或有功能缺失的浏览器下的测试工作安排在开发周期的最后阶段，并把测试对象限定为主流浏览器（如 IE、Mozilla 等）的前一个版本。\n\n区别：\n    1. 优雅降级是从复杂的现状开始，并试图减少用户体验的供给\n    2. 渐进增强则是从一个非常基础的，能够起作用的版本开始，并不断扩充，以适应未来环境的需要\n    3. 降级（功能衰减）意味着往回看；而渐进增强则意味着朝前看，同时保证其根基处于安全地带"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★★ 移动端适配怎么做？","key":"html+css317","answer":"方法一：@media 媒体查询，通过查询设备的宽度来执行不同的 css 代码，最终达到界面的配置。\n\n方法二：Flex弹性布局\n\n方法三：rem + viewport 缩放，屏幕宽度设定 rem 值，需要适配的元素都使用 rem 为单位，不需要适配的元素还是使用 px 为单位。"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ 请问苹果原生浏览器中默认样式如何清除，例如button，input默认样式？","key":"html+css318","answer":"清除苹果默认样式： css样式中加入 input,textarea,button { -webkit-appearance: none; border-radius:0px; border:none;}\n\ninput、button默认样式： input[type=\"button\"], input[type=\"submit\"], input[type=\"reset\"] {-webkit-appearance: none;}"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★ CSS清除浮动的方法。","key":"html+css319","answer":"1. 在标签尾部添加空块级标签，设置样式属性为：clear：both；缺点：如果页面浮动布局多，就要增加很多空div，不利于页面的优化。\n2. 父级定义伪类after和zoom，.box:after{display:block; clear:both; content:\"\"; visibility:hidden; height:0;}  .box{ zoom: 1 }\n3. 简单粗暴，父级设置overflow:hidden，缺点是不能和position配合使用\n4. 直接给父元素单独设置高度（height）；缺点：只适合高度固定的布局，要给出精确的高度，如果高度和父级div不一样时，会产生问题。对于响应式布局会有很大影响。"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ PC端常用的布局方法。","key":"html+css320","answer":"1、利用float+overflow实现\n    左右定宽度，分布向两边浮动，中间如果没设置溢出处理默认宽度是100%，设置后就会截取两边的宽度从而实现中间自适应\n2、flex布局\n    通过flex相关的属性进行适配性的调整布局\n3、Table表格布局\n4、float+margin实现三列布局\n5、定位absolute实现中间自适应\n6、Grid网格布局\n7、圣杯布局\n8、双飞翼布局\n9、等高布局"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ 布局左边20%，中间自适应，右边200px，不能用定位。","key":"html+css321","answer":"布局： <div class=\"box\">\n        <div class=\"left\">left</div>\n        <div class=\"right\">right</div>\n        <div class=\"content\">content</div>\n      </div>\n\n样式：*,html,body{\n          margin: 0;\n          padding: 0;\n        }\n        .box{\n          width: 1500px;\n          height: 500px;\n          background-color: rgb(215, 221, 221);\n          margin: 0 auto;\n        }\n        .left{\n          width: 20%;\n          height: 200px;\n          background-color: chocolate;\n          float: left;\n        }\n        .right{\n          width: 200px;\n          height: 200px;\n          float: right;\n          background-color: cornflowerblue;\n        }\n        .content{\n          overflow: hidden;\n          height: 400px;\n          background-color: darkblue;\n        }"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ 行内元素和块级元素？img算什么？行内元素怎么转化为块元素？","key":"html+css322","answer":"行内元素：1.无法设置宽高；\n        2. 对margin仅设置左右有效，上下无效；\n        3. padding上下左右有效；不会自动换行\n块级元素：1.可以设置宽高\n        2. margin和padding的上下左右均对其有效\n        3. 超出当前行会自动换行\n        4. 多个块状元素标签写在一起，默认排列方式为从上至下\nimg：属于行内块元素(inline-block),即有行内元素的属性也有块级元素的属性\n\n元素之间的转化可以通过设置样式：display:block/inline/inline-block来改变自身的元素属性"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ 将多个元素设置为同一行? 清除浮动的几种方式？","key":"html+css323","answer":"将多个元素设置为同一行：1. 浮动(float) 2.行内元素/行内块元素  \n清除浮动：\n1. 在标签尾部添加空块级标签，设置样式属性为：clear：both；缺点：如果页面浮动布局多，就要增加很多空div，不利于页面的优化。\n2. 父级定义伪类after和zoom，.box:after{display:block; clear:both; content:\"\"; visibility:hidden; height:0;}  .box{ zoom: 1 }\n3. 简单粗暴，父级设置overflow:hidden，缺点是不能和position配合使用\n4. 直接给父元素单独设置高度（height）；缺点：只适合高度固定的布局，要给出精确的高度，如果高度和父级div不一样时，会产生问题。对于响应式布局会有很大影响。"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★ 什么是CSS3 transform? animation? 区别是什么？","key":"html+css324","answer":"transform：1. transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。\n          2. transform属性是静态属性，需要配合transition和animation才能展现出动画效果。你可以把它看成是跟left、top等属性一样，只是一个静态样式而已。\n\nanimation：一个css3的动画属性，需要配合@keyframes 使用\n\n区别： 1. transition是css中检测指定属性变化进行自动补间动画的属性。\n      2. animate是先指定好动画过程中的关键帧属性，进行动画的属性。"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ nth-of-type和nth-child的区别是什么？","key":"html+css325","answer":"nth-of-type：该css伪类是针对具有一组兄弟节点的标签, 用 n 来筛选出在一组兄弟节点的位置。\n\nnth-child：该css伪类首先是找到所有当前元素的兄弟元素，, 用 n 来筛选出在当前元素的兄弟元素节点的位置。\n\n总的来说就是，nth-of-type 它是当前元素的兄弟元素的第n个，而nth-child 是当前元素的兄弟节点的第n个当前元素。\n\n例：\n      <p>第一个</p>\n      <p>第二个</p>\n      <h1>第三个</h1>\n      <p>第四个</p>\n      <p>第五个</p>\n\n     p:nth-child(4){\n      color: red;     //选中的是 ‘第四个’ 内容的 p 标签\n    }\n\n    p:nth-of-type(4){\n      color: yellow;  //选中的是 ‘第五个’ 内容的 p 标签\n    }"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ :before 和 ::before区别是什么？","key":"html+css326","answer":"区别：\n    1. 叫法不同：一个是伪类，一个是伪元素\n    2. 版本不同：作用都是一样，但单冒号伪类写法是旧版本css2写法， 双冒号伪元素是新版本css3写法\n    3. 兼容性差异：单冒号伪类写法 兼容性比 双冒号要好。 :before > ::before"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ 简述 viewport 所有属性","key":"html+css327","answer":"width：控制 viewport 的大小，可以指定的一个值，如 600，或者特殊的值，如 device-width 为设备的宽度（单位为缩放为 100% 时的 CSS 的像素）。\n\nheight：和 width 相对应，指定高度。\n\ninitial-scale：初始缩放比例，也即是当页面第一次 load 的时候缩放比例（调整页面缩放比例）。\n\nmaximum-scale：允许用户缩放到的最大比例。\n\nminimum-scale：允许用户缩放到的最小比例。\n\nuser-scalable：用户是否可以手动缩放"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★ 如何理解HTML结构语义化？","key":"html+css328","answer":"为什么要语义化：\n    a. 为了在没有CSS的情况下，页面也能呈现出很好地内容结构、代码结构:为了裸奔时好看；\n\n    b. 用户体验：例如title、alt用于解释名词或解释图片信息的标签尽量填写有含义的词语、label标签的活用；\n\n    c. 有利于SEO：和搜索引擎建立良好沟通，有助于爬虫抓取更多的有效信息：爬虫依赖于标签来确定上下文和各个关键字的权重；\n\n    d. 方便其他设备解析（如屏幕阅读器、盲人阅读器、移动设备）以有意义的方式来渲染网页；\n\n    e. 便于团队开发和维护，语义化更具可读性，遵循W3C标准的团队都遵循这个标准，可以减少差异化。\n\n写代码时要注意什么：\n    1.  尽可能少的使用无语义的标签div和span；\n\n    2.  在语义不明显时，既可以使用div或者p时，尽量用p, 因为p在默认情况下有上下间距，对兼容特殊终端有利；\n\n    3.  不要使用纯样式标签，如：b、font、u等，改用css设置。\n\n    4.  需要强调的文本，可以包含在strong或em标签中，strong默认样式是加粗（不要用b），em是斜体（不要用i）；\n\n    5.  使用表格时，标题要用caption，表头用thead，主体部分用tbody包围，尾部用tfoot包围。表头和一般单元格要区分开，表头用th，单元格用td；\n\n    6.表单域要用fieldset标签包起来，并用legend标签说明表单的用途；demo\n\n    7.每个input标签对应的说明文本都需要使用label标签，并且通过为input设置id属性，在lable标签中设置for=someld来让说明文本和相对应的input关联起来。\n\n    8.补充一点：不仅写html结构时，要用语义化标签，给元素写css类名时，也要遵循语义化原则，不要，随便起个名字就用，那样等以后，再重构时，非常难读。最忌讳的是不会英文，用汉语拼音代替。别那么LOW 。"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ 伪类选择器和伪元素？CSS3中引入的伪元素有什么？","key":"html+css329","answer":"1. 伪类选择器是css2版本中的旧写法，相对于css3中伪元素的的新写法兼容性会更好。\n\n2. 伪元素只能在一个选择器中出现一次，且需要配合content属性一起使用\n\n3. 伪元素不会出现在DOM中，所以不能通过js来进行操作，仅仅是在渲染层加入而已\n\ncss3引入的伪元素：\n    1、 ::after  //在xxx之后插入内容\n    2、 ::before     // 在xxx之前插入内容\n    3、 ::first-letter  //选择xxx元素的首字母\n    4、 ::first-line       //选择xxx元素的首行\n    5、 ::selection     //选择用户选择的元素部分"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ HTML5有哪些新特性，移除了哪些元素？如何处理HTML5新标签兼容问题？如何区分HTML和HTML5？","key":"html+css330","answer":"HTML5 新特性：\n    一、语义标签\n\n    二、增强型表单\n\n    三、视频和音频\n\n    四、Canvas绘图\n\n    五、SVG绘图\n\n    六、地理定位\n\n    七、拖放API\n\n    八、WebWorker\n\n    九、WebStorage\n\n    十、WebSocket\n\n移除的元素：\n    1、纯表现的元素：basefont，big，center，font,s，strike，tt，u。\n\n    2、对可用性产生负面影响的元素：frame，frameset，noframes。\n\n处理HTML5新标签兼容问题： 使用html5shiv\n    原理：用document.createElement()创建html5标签\n\n    用法：1、在页面引入html5shiv.js\n         2、在样式中编写 article,aside,dialog,footer,header,section,footer,nav,figure,menu\n{display:block}\n\n如何区分HTML和HTML5：\n    HTML：  1）标识文本（eg: 定义标题文本、段落文本、列表文本、预定义文本）；\n            2）建立超链接，便于页面链接的跳转；\n            3）创建列表，把信息有序地组织在一起，方便浏览；\n            4）在网页中显示“图像、声音、视频、动画”等多媒体信息，使网页设计更具冲击力；\n            5）可制作表格，以便显示大量数据；\n            6）可制作表单，允许在网页内输入文本信息，执行其他用户操作，方便信息互动；\n            7）没有体现结构语义化的标签（常用命名方式如下，eg: <div id=“header”></div>, 该语句用来表示网站的头部）。\n\n    HTML5： 1）用于绘画的canvas元素；\n            2）用于媒介回放的video和audio元素；\n            3）对本地离线存储有更好的支持；\n            4）新的特殊内容元素（eg: article、footer、header、nav、section等）；\n            5）新的表单控件（eg: calendar、date、time、email、url、search等）；\n            6）有语义优势，提供了一些新标签，（eg: <header> <article> <footer> 提供了语义化标签），可以更好地支持搜索引擎的读取，便于SEO蜘蛛的爬行。"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ 常见浏览器兼容性问题？","key":"html+css331","answer":"1、不同浏览器下的padding和margin不同\n    解决方法：使用通配符(*)将padding和margin设置为0\n\n2、块属性标签float之后，又有横向的margin值，在IE6中显示会比设置的大（IE6双边距bug）\n    解决方法：在float标签样式控制中加入display:inline;\n\n3、设置较小的高度标签（一般小于10px），在IE6，IE7，遨游中超出自己设置的高度\n    解决方法：给超出高度的标签设置overflow:hidden;或者设置行高line-height小于你设置的高度。\n\n4、行内标签设置display:block;后又采用float布局，再设置横向margin值时，在IE6中显示会比设置的大（IE6双边距bug）\n    解决方法：在display:block;后面加上display:inline;display:table;\n\n"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★ 块级元素？行内元素？空元素？","key":"html+css332","answer":"块级元素：1. 可以设置宽高值，元素大小超出html文档会自动换行\n        2. 外边距和内边距都可控制\n        3. 可以容纳行内元素和其他块元素\n\n行内元素：1. 不可以设置宽高值，元素紧跟在前一个元素后面，不会换行\n        2. 宽度就是它的文字或图片的宽度，不可改变；\n        3. 内联元素只能容纳文本或者其他内联元素；\n\n空元素： 1. 没有闭合标签的标签被称作为空标签。\n        2.在我们使用的标签中，有的具有闭合标签。例如<td>标签，它有闭合标签</td>。但是也有一部分标签没有闭合标签，例如<br />标签，这一类标签我们称之为空标签。"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ media属性？screen? All? max-width? min-width?","key":"html+css333","answer":"media： 媒体查询\n\nscreen ：计算机屏幕\n\nAll ：默认，适合所有设备\n\nmax(min)-width ：规定目标显示区域的宽度\n\ncss合并写法： @media screen and (min-width:xxxpx) {}"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★ meta标签的name属性值?","key":"html+css334","answer":"解释：meta标签的 name 属性是用来定义一个 HTML 文档的描述、关键词，规定了元数据的名称，规定了content属性的信息/值的名称\n属性值： 1. application-name  //规定页面所代表的Web应用程序的名称\n        2. author     //规定页面文档的作者的名字\n            实例： <meta name=\"author\" content=\"作者名称\">\n\n        3. description    //规定页面的描述。搜索引擎会把这个描述显示在搜索结果中\n            实例： <meta name=\"description\" content=\"页面描述\">\n\n        4. gennerator    //规定用于生成文档的一个软件包（不用于手写页面）。\n            实例： <meta name=\"generator\" content=\"FrontPage 4.0\">\n\n        5. keywords    //规定一个逗号分隔的关键词列表 - 相关的网页（告诉搜索引擎页面是与什么相关的）。\n            实例： <meta name=\"keywords\" content=\"HTML, meta tag, tag reference\"\n            提示：总是规定关键词（对于搜索引擎进行页面分类是必要的）。"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ 一般做手机页面切图的几种方式","key":"html+css335","answer":"1、DPR：2    -----  切两倍图，（即设计原图大小，因为设计图是按原来的手机尺寸放大两倍之后的）  一般保存为xxx@2x\n\n2、DPR：3 -----   切三倍图（即设计原图大小的1.5倍，因为设计图是按原来的手机尺寸放大两倍之后的）     一般保存为xxx@3x\n\n切图的注意事项：\n    1、 尺寸：一定是要偶数\n    2、 命名：命名需要符合功能板块\n"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ px/em/rem有什么区别？为什么通常给font-size设置的字体为62.5%","key":"html+css336","answer":"px（像素）：页面默认的尺寸计算单位，绝对长度,它是相对于显示器屏幕分辨率而言的\n\n    特点：1. IE无法调整那些使用px作为单位的字体大小\n         2. 国外的大部分网站能够调整的原因在于其使用了em或rem作为字体单位；\n         3. Firefox能够调整px和em，rem，但是96%以上的中国网民使用IE浏览器(或内核)。\n\n\nem：相对长度，相对于应用在当前元素的字体尺寸；一般浏览器默认字体大小为16px，则 1em = 16px\n\n    特点：1. em的值并不是固定的；\n         2. em会继承父级元素的字体大小。\n\n\nrem（root em）：相对单位，相对于html根元素字体大小的单位，当html的font-size：16px时，1rem = 16px\n\n    特点：1. 这个单位可谓集相对大小和绝对大小的优点于一身，通过它既可以做到只修改根元素就成比例地调整所有字体大小，又可以避免字体大小逐层复合的连锁反应。\n         2. 除了IE8及更早版本外，所有浏览器均已支持rem。\n\n\n为什么给font-size设置为62.5%： 方便换算！\n    1. 因为绝大多数浏览器的默认字体大小为 16px ，而将font-size设置为 62.5% 则等价于字体大小的font-size:10px;\n    2. 随之在其他的换算单位，如 rem 的字体换算时，则可以表示为 1rem = 10px， 整数值对于单位的换算会比较方便\n\n    3. 但是在Chrome（谷歌浏览器）中，支持最小字体的大小为 12px ，解决办法就是 将html根字体设置为 font-size: 625%; 意：1rem = 100px ，以此单位换算"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ sass和scss有什么区别? sass一般怎么样编译的","key":"html+css337","answer":"区别：1、sass 书写时不带大括号, scss 带大括号\n         例： sass-  .box\n                       color:red\n\n             scss-   .box{\n                color:red;\n               }\n     2、 sass 没有 ; 号 , scss有\n\n     3、 scss 写法和css 简直一样\n\nsass编译：\n    1. sass 是基于Ruby语言开发而成的，所以在使用 sass语言之前得先行安装Ruby编译器。\n    2. Sass语言有两种后缀名，分别是 .sass 和 .scss ，两者只是写法有些许不同。\n    3. 编译方式：\n        1、命令行编译\n        2、插件保存编译\n"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ 如果对css进行优化如何处理？","key":"html+css338","answer":"优化原则：减少css样式的渲染加载时间，通过削减css样式的代码体积等相关操作\n\n实践型优化：\n    1、内联首屏关键CSS（Critical CSS）：内联CSS能够使浏览器开始页面渲染的时间提前\n        * 性能优化中有一个重要的指标——首次有效绘制（First Meaningful Paint，简称FMP）即指页面的首要内容（primary content）出现在屏幕上的时间\n        ** 这一指标影响用户看到页面前所需等待的时间，而内联首屏关键CSS（即Critical CSS，可以称之为首屏关键CSS）能减少这一时间。\n\n    注：内联css并不是不加以限制的，它的初始拥堵窗口3存在限制（TCP相关概念，通常是 14.6kb， 压缩后的大小），如果内联CSS后的文件超出了这一限制，系统就需要在服务器和浏览器之间进行更多次的往返，这样并不能提前页面渲染时间。\n\n    2、异步加载CSS\n        * CSS会阻塞渲染，在CSS文件请求、下载、解析完成之前，浏览器将不会渲染任何已处理的内容。\n        ** 有时，这种阻塞是必须的，因为我们并不希望在所需的CSS加载之前，浏览器就开始渲染页面。\n        *** 那么将首屏关键CSS内联后，剩余的CSS内容的阻塞渲染就不是必需的了，可以使用外部CSS，并且异步加载\n\n        方式一、 使用JavaScript动态创建样式表link元素，并插入到DOM中。\n\n        方式二、 将link元素的media属性设置为用户浏览器不匹配的媒体类型（或媒体查询），如media=\"print\"，甚至可以是完全不存在的类型media=\"noexist\"。对浏览器来说，如果样式表不适用于当前媒体类型，其优先级会被放低，会在不阻塞页面渲染的情况下再进行下载。\n\n\n    3、文件压缩\n        * 通过相关的构建工具对css样式进行打包压缩，去除多余的空格和换行。如 webpack、rollup、grunt/gulp.js 等    \n\n\n    4、去除无用CSS\n        1. 筛选去除相关重复的css样式\n        2. 去除在页面中无法生效或不生效的css样式\n\n\n建议型优化：\n    1、有选择地使用选择器\n\n    2、减少使用昂贵的属性\n        1. 在浏览器绘制屏幕时，所有需要浏览器进行操作或计算的属性相对而言都需要花费更大的代价。\n\n        2. 当页面发生重绘时，它们会降低浏览器的渲染性能。所以在编写CSS时，我们应该尽量减少使用昂贵属性\n        * 昂贵属性： 如box-shadow/border-radius/filter/透明度/伪类:nth-child()等\n\n\n    3、优化重排与重绘\n        * 减少重排\n            1. 重排会导致浏览器重新计算整个文档，重新构建渲染树，这一过程会降低浏览器的渲染速度。有很多操作会触发重排，我们应该避免频繁触发这些操作。\n\n        ** 避免不必要的重绘\n            1. 当元素的外观（如color，background，visibility等属性）发生改变时，会触发重绘。\n            2. 在网站的使用过程中，重绘是无法避免的。不过，浏览器对此做了优化，它会将多次的重排、重绘操作合并为一次执行。\n            3. 不过我们仍需要避免不必要的重绘，如页面滚动时触发的hover事件，可以在滚动的时候禁用hover事件，这样页面在滚动时会更加流畅。\n\n\n    4、不要使用@import\n        *** 不建议使用@import主要有以下两点原因。\n\n        * 首先，使用@import引入CSS会影响浏览器的并行下载。使用@import引用的CSS文件只有在引用它的那个css文件被下载、解析之后，浏览器才会知道还有另外一个css需要下载，这时才去下载，然后下载后开始解析、构建render tree等一系列操作。这就导致浏览器无法并行下载所需的样式文件。\n\n        ** 其次，多个@import会导致下载顺序紊乱。在IE中，@import会引发资源文件的下载顺序被打乱，即排列在@import后面的js文件先于@import下载，并且打乱甚至破坏@import自身的并行下载"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":"★★ 如何对css文件进行压缩合并? gulp如何实现？","key":"html+css339","answer":"如何压缩合并：\n    ** 通过相关的构建工具对css样式进行打包压缩，去除多余的空格和换行。如 webpack、rollup、grunt/gulp.js 等\n\ngulp 如何实现css压缩合并\n    * 看链接"},{"answerTimes":"","frequentProblems":"","rightAndWrongTimes":"","modify":"","name":" ★ 如何实现图片和文字在同一行显示?","key":"html+css340","answer":"\n1. 给img标签添加 “vertical-align:middle”属性\n\n2. 如果是背景图，则通过background的 定位属性来设置位置\n\n3. 分别把图片和文字放入不同的div中，设置“vertical-align:middle”属性"}],"isChoice":false}